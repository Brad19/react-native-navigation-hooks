(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),o=(n(0),n(84)),i={id:"use-navigation-search-bar-update",title:"useNavigationSearchBarUpdate",sidebar_label:"useNavigationSearchBarUpdate",hide_title:!0,hide_table_of_contents:!0},c={unversionedId:"use-navigation-search-bar-update",id:"use-navigation-search-bar-update",isDocsHomePage:!1,title:"useNavigationSearchBarUpdate",description:"useNavigationSearchBarUpdate (iOS 11+ only)",source:"@site/docs/use-navigation-search-bar-update.mdx",permalink:"/react-native-navigation-hooks/docs/use-navigation-search-bar-update",editUrl:"https://github.com/underscopeio/react-native-navigation-hooks/edit/master/website/docs/use-navigation-search-bar-update.mdx",sidebar_label:"useNavigationSearchBarUpdate",sidebar:"docs",previous:{title:"useNavigationScreenPop",permalink:"/react-native-navigation-hooks/docs/use-navigation-screen-pop"},next:{title:"useNavigationSearchBarCancelPress",permalink:"/react-native-navigation-hooks/docs/use-navigation-search-bar-cancel-press"}},s=[{value:"<code>useNavigationSearchBarUpdate (iOS 11+ only)</code>",id:"usenavigationsearchbarupdate-ios-11-only",children:[{value:"Examples",id:"examples",children:[]},{value:"Reference",id:"reference",children:[]}]}],p={rightToc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"usenavigationsearchbarupdate-ios-11-only"},Object(o.b)("inlineCode",{parentName:"h2"},"useNavigationSearchBarUpdate (iOS 11+ only)")),Object(o.b)("p",null,"Called when a SearchBar from NavigationBar gets updated. ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://wix.github.io/react-native-navigation/api/events/#searchbarupdated-ios-11-only"}),"more info")),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("h4",{id:"using-navigation-context"},"Using Navigation Context"),Object(o.b)("samp",{id:"use-navigation-search-bar-update-using-navigation-context"}),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import { useNavigationSearchBarUpdate } from 'react-native-navigation-hooks'\n\nconst ExampleScreen = () => {\n  // Listen events only for this screen if screen was wrapped with NavigationProvider\n  useNavigationSearchBarUpdate((e) => {\n    console.log(`Seach bar text changed to ${e.text} ${e.focussed ? ' (focussed)' : ''} on this screen`)\n  })\n\n  return <Text>Example Screen</Text>\n}\n")),Object(o.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Provide a Navigation Context")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If your screen wasn't wrapped with the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"contexts#navigationprovider"}),"NavigationProvider")," nor using the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"hocs#withnavigationproviders"}),"withNavigationProvider")," HOC it will ",Object(o.b)("inlineCode",{parentName:"p"},"console.warn")," you about it!"))),Object(o.b)("h4",{id:"manually"},"Manually"),Object(o.b)("samp",{id:"use-navigation-search-bar-update-without-navigation-context"}),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import { useNavigationSearchBarUpdate } from 'react-native-navigation-hooks'\n\nconst ExampleScreen = ({ componentId }) => {\n  // Listen events only for this screen by providing componentId as paramenter\n  useNavigationSearchBarUpdate(\n    (e) => {\n      console.log(`Seach bar text changed to ${e.text} ${e.focussed ? ' (focussed)' : ''} on this screen`)\n    },\n    { componentId }\n  )\n\n  return <Text>Example Screen</Text>\n}\n")),Object(o.b)("h3",{id:"reference"},"Reference"),Object(o.b)("h4",{id:"methods"},"Methods"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useNavigationSearchBarUpdate(handler: (event: SearchBarUpdatedEvent) => any, options: Options): void")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useNavigationSearchBarUpdate(handler: (event: SearchBarUpdatedEvent) => any, componentId?: string): void")),Object(o.b)("h4",{id:"types"},"Types"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Options: { componentId?: string, global?: boolean }")),Object(o.b)("h4",{id:"options"},"Options"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"componentId?: string")),Object(o.b)("p",null,"Filters the event from being triggered on every mounted screen but rather the one you've hooked with the event."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"global?: boolean")),Object(o.b)("p",null,"Disables the ",Object(o.b)("inlineCode",{parentName:"p"},"console.warn")," for the cases you don't provide a ",Object(o.b)("inlineCode",{parentName:"p"},"componentId")," through options nor context. In case you want to handle events globally for doing stuff like tracking/logging we encourage you to use the ",Object(o.b)("inlineCode",{parentName:"p"},"Navigation.events()")," from ",Object(o.b)("strong",{parentName:"p"},"React Native Navigation")))}b.isMDXComponent=!0},84:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return v}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,v=d["".concat(i,".").concat(u)]||d[u]||l[u]||o;return n?r.a.createElement(v,c(c({ref:t},p),{},{components:n})):r.a.createElement(v,c({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);